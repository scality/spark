---

- name: Copy start_spark.sh
  template:
    src: start_spark.sh.j2
    dest: /usr/local/bin/start_spark.sh
    mode: 0744
  tags:
    - run::configs

- name: Copy stop_spark.sh
  template:
    src: stop_spark.sh.j2
    dest: /usr/local/bin/stop_spark.sh
    mode: 0744
  tags:
    - run::configs

- name: Synchronize the master image
  synchronize:
    src: "{{ staging_path }}{{ item.split(':')[0].split('/')[-1] }}.tar"
    dest: "{{ staging_path }}"
  with_items:
    - "{{ master_container_image }}"

- name: Load the master container
  shell:
    cmd: docker load < {{ staging_path }}{{ item.split(':')[0].split('/')[-1] }}.tar
  with_items:
    - "{{ master_container_image }}"
  when:
    - inventory_hostname in groups['sparkmaster']|default([])
  tags:
    - run::deployment

- name: Synchronize the workers images
  synchronize:
    src: "{{ staging_path }}{{ item.split(':')[0].split('/')[-1] }}.tar"
    dest: "{{ staging_path }}"
  with_items:
    - "{{ worker_container_image }}"
    - "{{ s3utils_container_image }}"
    - "{{ nginx_container_image }}"
  when:
    - inventory_hostname in groups['sparkworkers']|default([])
  tags:
    - run::deployment

- name: Load the worker and s3utils containers
  shell:
    cmd: docker load < {{ staging_path }}{{ item.split(':')[0].split('/')[-1] }}.tar
  with_items:
    - "{{ worker_container_image }}"
    - "{{ s3utils_container_image }}"
    - "{{ nginx_container_image }}"
  when:
    - inventory_hostname in groups['sparkworkers']|default([])
  tags:
    - run::deployment

- name: Stop any running spark cluster
  command: sh /usr/local/bin/stop_spark.sh
  ignore_errors: true
  tags:
    - run::cluster
    - run::cluster::stop

- name: Start the spark cluster
  command: sh /usr/local/bin/start_spark.sh
  tags:
    - run::cluster
    - run::cluster::start
