name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to use generating offline installer
        required: true
      prerelease:
        description: Is the release a pre release?
        type: boolean
        required: false
        default: false

run-name: Release ${{ inputs.tag }}

env:
  image_path: spark-dev/deployment
  staging_path: /home/runner/work/spark/spark/staging
  registry: registry.scality.com
  img: fieldreportservice
  image: registry.scality.com/spark-dev/deployment
  staging_archive: spark-offline-archive-${{ inputs.tag }}${{ inputs.prerelease == true && '-prerelease' || '' }}.run

jobs:
  release:
    environment: packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}
      - name: Make staging and ssh directories
        run: |
          mkdir -pv ${{ env.staging_path }} ~/.ssh
          chmod 700 ~/.ssh
      - name: Prepare SSH key
        run: |
          echo "${{ secrets.PACKAGES_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Copy SSH config
        run: |
          cp .github/config/packages_ssh_config ~/.ssh/config
      - name: Registry Login
        uses: docker/login-action@v2.1.0
        with:
          registry: registry.scality.com
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Ensure makeself is installed
        run: |
          sudo apt-get update
          sudo apt-get install -y makeself
      - name: Create Archive from Spark
        run: |
          git archive --output=${{ env.staging_path }}/spark-repo.tar --format=tar HEAD
      - name: Pull containers from ${{ env.registry }}
        run: |
          docker pull ${{ env.registry }}/spark/spark-master:latest
          docker pull ${{ env.registry }}/spark/spark-worker:latest
          docker pull ${{ env.registry }}/s3utils/s3utils:1.12.5
          docker pull docker.io/library/nginx:1.21.6-alpine
      - name: Save the images into the staging directory
        run: |
          docker save -o ${{ env.staging_path }}/spark-master.tar ${{ env.registry }}/spark/spark-master:latest
          docker save -o ${{ env.staging_path }}/spark-worker.tar ${{ env.registry }}/spark/spark-worker:latest
          docker save -o ${{ env.staging_path }}/s3utils.tar ${{ env.registry }}/s3utils/s3utils:1.12.5
          docker save -o ${{ env.staging_path }}/nginx.tar docker.io/library/nginx:1.21.6-alpine
      - name: Copy the setup script into the staging directory
        run: |
          cp ./scripts/offline-archive-setup.sh ${{ env.staging_path }}/setup.sh
          chmod +x ${{ env.staging_path }}/setup.sh
      - name: Create self extracting archive (SFX)
        run: |
          cd ${{ env.staging_path }}
          makeself \
            --nocomp \
            --notemp \
            ${{ env.staging_path }} \
            ../${{ env.staging_archive }} \
            "Scality Spark Orphan Hunter SFX (Self Extracting Archive)" \
            ./setup.sh
      - name: Copy the self extracting archive (SFX) to packages server
        run: |
          scp ${{ env.staging_archive }} ${{ secrets.PACKAGES_SSH_USER }}@packages:/mnt/cephstorage/www/html/packages/extras/centos/7/x86_64/scality/
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ inputs.tag }}
          tag_name: ${{ inputs.tag }}
          generate_release_notes: true
          target_commitish: ${{ github.sha }}
          prerelease: ${{ inputs.prerelease }}
